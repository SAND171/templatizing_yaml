apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "profile-kafka-to-postgres.fullname" . }}
  labels:
    {{- include "profile-kafka-to-postgres.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "profile-kafka-to-postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "profile-kafka-to-postgres.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "profile-kafka-to-postgres.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostAliases:
        - ip: 10.10.10.57
          hostnames:
            - kafka.cluster.local 
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9001
              protocol: TCP
          env:
            - name: POSTGRES_SERVER
              value: {{ .Release.Name }}-postgresql-headless:5432
            - name: DATABASE
              value: {{.Values.envVariables.database}}
            - name: USERNAME
              value: {{.Values.envVariables.username}}
            - name: PASSWORD
              value: {{.Values.envVariables.password}}
            - name: TABLENAME
              value: {{.Values.envVariables.table}}
            - name: TOPIC
              value: {{.Values.envVariables.outputTopic}}
            {{ if .Values.schemaRegistry.external }}
            - name: "SR_URL"
              value: {{ .Values.schemaRegistry.address }}
            {{ else }}
            - name: "SR_URL"
              value: http://{{ .Release.Name }}-cp-schema-registry:8081
            {{ end }}
            {{ if .Values.kafka.external }}
            - name: "KAFKA_BROKER"
              value: {{ .Values.kafka.address }}
            {{ else }}
            - name: "KAFKA_BROKER"
              value: PLAINTEXT://{{ .Release.Name }}-cp-kafka-headless:9092
            {{ end }}
            - name: GROUP_ID
              value: {{.Values.envVariables.groupId}}
            - name: TTL_IN_DAYS
              value: "{{.Values.envVariables.ttl_in_days}}"
            - name: "CONSUMER_PROPERTIES"
              value: {{ .Values.kafka.CONSUMER_PROPERTIES | quote }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
